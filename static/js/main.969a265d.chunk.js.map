{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","index.js"],"names":["Todo","_ref","todo","remove","update","toggleComplete","_useState","useState","_useState2","Object","slicedToArray","isEditing","setIsEditing","_useState3","task","_useState4","setTask","toggleFrom","react_default","a","createElement","className","onSubmit","evt","preventDefault","id","onChange","target","value","type","onClick","completed","NewTodoForm","createTodo","_useReducer","useReducer","state","newState","objectSpread2","_useReducer2","userInput","setUserInput","newTodo","uuid","htmlFor","defineProperty","name","placeholder","TodoList","todos","setTodos","filter","updtedTask","updatedTodos","map","todosList","src_Todo","key","src_NewTodoForm","console","log","concat","toConsumableArray","App","src_TodoList","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.969a265d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Todo.css\";\r\n\r\nfunction Todo({ todo, remove, update, toggleComplete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [task, setTask] = useState(todo.task);\r\n\r\n  const handleClick = evt => {\r\n    remove(evt.target.id);\r\n  };\r\n  const toggleFrom = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n  const handleUpdate = evt => {\r\n    evt.preventDefault();\r\n    update(todo.id, task);\r\n    toggleFrom();\r\n  };\r\n  const handleChange = evt => {\r\n    setTask(evt.target.value);\r\n  };\r\n  const toggleCompleted = evt => {\r\n    toggleComplete(evt.target.id);\r\n  };\r\n\r\n  let result;\r\n  if (isEditing) {\r\n    result = (\r\n      <div className=\"Todo\">\r\n        <form className=\"Todo-edit-form\" onSubmit={handleUpdate}>\r\n          <input onChange={handleChange} value={task} type=\"text\" />\r\n          <button>Save</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    result = (\r\n      <div className=\"Todo\">\r\n        <li\r\n          id={todo.id}\r\n          onClick={toggleCompleted}\r\n          className={todo.completed ? \"Todo-task completed\" : \"Todo-task\"}\r\n        >\r\n          {todo.task}\r\n        </li>\r\n        <div className=\"Todo-buttons\">\r\n          <button onClick={toggleFrom}>\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n          <button onClick={handleClick}>\r\n            <i id={todo.id} className=\"fas fa-trash\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport uuid from \"uuid\";\r\nimport \"./newTodoForm.css\";\r\n\r\nfunction NewTodoForm({ task, createTodo }) {\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      task: \"\"\r\n    }\r\n  );\r\n\r\n  const handleChange = evt => {\r\n    setUserInput({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const newTodo = { id: uuid(), task: userInput.task, completed: false };\r\n    createTodo(newTodo);\r\n    setUserInput({ task: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"NewTodoForm\" onSubmit={handleSubmit}>\r\n      <label htmlFor=\"task\">New todo</label>\r\n      <input\r\n        value={userInput.task}\r\n        onChange={handleChange}\r\n        id=\"task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        placeholder=\"New Todo\"\r\n      />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewTodoForm;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport uuid from \"uuid\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([\r\n    { id: uuid(), task: \"task 1\", completed: false },\r\n    { id: uuid(), task: \"task 2\", completed: true }\r\n  ]);\r\n\r\n  const create = newTodo => {\r\n    console.log(newTodo);\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const remove = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const update = (id, updtedTask) => {\r\n    const updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updtedTask };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const toggleComplete = id => {\r\n    const updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const todosList = todos.map(todo => (\r\n    <Todo\r\n      toggleComplete={toggleComplete}\r\n      update={update}\r\n      remove={remove}\r\n      key={todo.id}\r\n      todo={todo}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"TodoList\">\r\n      <h1>\r\n        Todo List <span>A simple React Todo List App</span>\r\n      </h1>\r\n      <ul>{todosList}</ul>\r\n      <NewTodoForm createTodo={create} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoList from \"./TodoList.js\";\nimport \"./styles.css\";\n\n// Project for Udemy react bootcamp\n// https://www.udemy.com/course/modern-react-bootcamp/\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}